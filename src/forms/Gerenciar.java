/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import cinema.Services;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import models.Movie;
import models.Session;
import models.Ticket;

/**
 *
 * @author higor
 */
public class Gerenciar extends javax.swing.JFrame {

    /**
     * Creates new form Gerenciar
     */
    final private Services server;
    public Gerenciar(Services server) {
        initComponents();
        this.server = server;
        ListarFilmes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combo_filmes = new javax.swing.JComboBox<>();
        combo_sessoes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_voltar = new javax.swing.JButton();
        btn_criarSessao = new javax.swing.JButton();
        btn_finalizar = new javax.swing.JButton();
        btn_adicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerênciar");
        setResizable(false);

        combo_filmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um filme" }));
        combo_filmes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_filmesItemStateChanged(evt);
            }
        });

        combo_sessoes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma sessão" }));
        combo_sessoes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_sessoesItemStateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sala", "Cadeira", "Disponivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });

        btn_criarSessao.setText("Criar Sessão");
        btn_criarSessao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_criarSessaoActionPerformed(evt);
            }
        });

        btn_finalizar.setText("Finalizar");

        btn_adicionar.setText("Adicionar");
        btn_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_voltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_finalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_criarSessao)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(combo_filmes, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(btn_adicionar)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(combo_sessoes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_filmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_adicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_sessoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_voltar)
                    .addComponent(btn_criarSessao)
                    .addComponent(btn_finalizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        new Inicio(server).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_voltarActionPerformed

    private void btn_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarActionPerformed
        new AdicionarFilme(server).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_adicionarActionPerformed

    private void combo_filmesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_filmesItemStateChanged
        if (combo_filmes.getSelectedIndex() != 0 && combo_filmes.getSelectedIndex() != -1){
            Movie filme = (Movie) combo_filmes.getSelectedItem();
            ListarSessoes(filme);
        }else{
            DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_sessoes.getModel();
            dados.removeAllElements();
            dados.addElement("Selecione uma sessão");
        }
    }//GEN-LAST:event_combo_filmesItemStateChanged

    private void combo_sessoesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_sessoesItemStateChanged
        if (combo_sessoes.getSelectedIndex() != 0 && combo_sessoes.getSelectedIndex() != -1){
//            Session sessao = (Session) combo_sessoes.getSelectedItem();
//            ListarIngressos(sessao);
        }else{
//            DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_sessoes.getModel();
//            dados.removeAllElements();
//            dados.addElement("Selecione uma sessão");
        }
    }//GEN-LAST:event_combo_sessoesItemStateChanged

    private void btn_criarSessaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_criarSessaoActionPerformed
        new CriarSessao(server).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_criarSessaoActionPerformed
    
    private void ListarFilmes() {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_filmes.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione um filme");
        try {
            List<Movie> FilmeList = server.listarFilmes();
            FilmeList.forEach(filme -> {
            dados.addElement(filme);
        });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void ListarSessoes(Movie filme) {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_sessoes.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione uma sessão");
        try {
            List<Session> sessionList = server.listarSessao(filme);
            sessionList.forEach(session -> {
            dados.addElement(session);
        });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
//    private void ListarIngressos(Session sessao) {
//        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_ingressos.getModel();
//        dados.removeAllElements();
//
//        try {
//            List<Ticket> ingressoList = server.listarIngressosDisponiveis(sessao);
//            ingressoList.forEach(ingresso -> {
//            dados.addElement(ingresso);
//        });
//        } catch (RemoteException ex) {
//            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_adicionar;
    private javax.swing.JButton btn_criarSessao;
    private javax.swing.JButton btn_finalizar;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JComboBox<Object> combo_filmes;
    private javax.swing.JComboBox<Object> combo_sessoes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
