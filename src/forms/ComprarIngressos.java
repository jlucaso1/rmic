/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import cinema.Services;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import models.Movie;
import models.Session;
import models.Ticket;
import models.User;
import utils.ComboBoxCustomLabel;

/**
 *
 * @author higor
 */
public class ComprarIngressos extends javax.swing.JFrame {

    /**
     * Creates new form ComprarIngressos
     */
    final private User usuario;
    final private Services server;

    public ComprarIngressos(Services server, User usuario) {
        initComponents();
        this.server = server;
        this.usuario = usuario;
        ListarFilmes();
    }

    private void ListarFilmes() {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_filmes.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione um filme");
        try {
            List<Movie> FilmeList = server.listarFilmesDisponiveis();
            FilmeList.forEach(filme -> {
                dados.addElement(filme);
            });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ListarDatasSessoes(Movie filme) {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_datas.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione uma data");
        try {
            List<Session> sessionList = server.listarDatasSessaoDisponivel(filme);
            sessionList.forEach(session -> {
                dados.addElement(new ComboBoxCustomLabel(session.getData().toString(), session));
            });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ListarHorariosSessoes(Session sessao) {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_horarios.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione um horário");
        try {
            List<Session> sessionList = server.listarHorariosSessaoDisponivel(sessao);
            sessionList.forEach(session -> {
                dados.addElement(new ComboBoxCustomLabel(session.getHora().toString(), session));
            });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void ListarIngressos(Session sessao) {
        DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_ingressos.getModel();
        dados.removeAllElements();
        dados.addElement("Selecione um ingresso");
        try {
            List<Ticket> ingressoList = server.listarIngressosDisponiveis(sessao);
            ingressoList.forEach(ingresso -> {
                dados.addElement(ingresso);
            });
        } catch (RemoteException ex) {
            Logger.getLogger(ComprarIngressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combo_filmes = new javax.swing.JComboBox<>();
        combo_datas = new javax.swing.JComboBox<>();
        combo_ingressos = new javax.swing.JComboBox<>();
        btn_voltar = new javax.swing.JButton();
        btn_comprar = new javax.swing.JButton();
        combo_horarios = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Comprar Ingressos");
        setMinimumSize(new java.awt.Dimension(387, 392));
        setResizable(false);
        setSize(new java.awt.Dimension(387, 392));

        combo_filmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um filme" }));
        combo_filmes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_filmesItemStateChanged(evt);
            }
        });

        combo_datas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma data" }));
        combo_datas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_datasItemStateChanged(evt);
            }
        });

        combo_ingressos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um ingresso" }));

        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });

        btn_comprar.setText("Comprar");
        btn_comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_comprarActionPerformed(evt);
            }
        });

        combo_horarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um horário" }));
        combo_horarios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_horariosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_voltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_ingressos, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(combo_datas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(combo_horarios, 0, 1, Short.MAX_VALUE))
                                .addComponent(combo_filmes, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(btn_comprar)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(combo_filmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_datas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_horarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(combo_ingressos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btn_comprar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btn_voltar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void combo_filmesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_filmesItemStateChanged
        if (combo_filmes.getSelectedIndex() != 0 && combo_filmes.getSelectedIndex() != -1) {
            Movie filme = (Movie) combo_filmes.getSelectedItem();
            ListarDatasSessoes(filme);
        } else {
            DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_datas.getModel();
            dados.removeAllElements();
            dados.addElement("Selecione uma data");
        }
    }//GEN-LAST:event_combo_filmesItemStateChanged

    private void combo_datasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_datasItemStateChanged
        if (combo_datas.getSelectedIndex() != 0 && combo_datas.getSelectedIndex() != -1) {
            Session sessao = (Session) ((ComboBoxCustomLabel) combo_datas.getSelectedItem()).getValue();
            ListarHorariosSessoes(sessao);
        } else {
            DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_horarios.getModel();
            dados.removeAllElements();
            dados.addElement("Selecione um horário");
        }
    }//GEN-LAST:event_combo_datasItemStateChanged

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        new Inicio(server, usuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_voltarActionPerformed

    private void combo_horariosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_horariosItemStateChanged
        if (combo_horarios.getSelectedIndex() != 0 && combo_horarios.getSelectedIndex() != -1) {
            Session sessao = (Session) ((ComboBoxCustomLabel) combo_horarios.getSelectedItem()).getValue();
            ListarIngressos(sessao);
        } else {
            DefaultComboBoxModel dados = (DefaultComboBoxModel) combo_ingressos.getModel();
            dados.removeAllElements();
            dados.addElement("Selecione um ingresso");
        }
    }//GEN-LAST:event_combo_horariosItemStateChanged

    private void btn_comprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_comprarActionPerformed
        if (combo_filmes.getSelectedIndex() != 0 && combo_filmes.getSelectedIndex() != -1 && combo_horarios.getSelectedIndex() != 0 && combo_horarios.getSelectedIndex() != -1 && combo_datas.getSelectedIndex() != 0 && combo_datas.getSelectedIndex() != -1 && combo_ingressos.getSelectedIndex() != 0 && combo_ingressos.getSelectedIndex() != -1) {
            try {
                Ticket ingresso = (Ticket) combo_ingressos.getSelectedItem();
                server.comprarIngresso(usuario, ingresso);
                JOptionPane.showMessageDialog(null, "Compra Feita com sucesso");
                new Inicio(server, usuario).setVisible(true);
                this.dispose();
            } catch (RemoteException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao comprar: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione todos os campos");
        }
    }//GEN-LAST:event_btn_comprarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_comprar;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JComboBox<Object> combo_datas;
    private javax.swing.JComboBox<Object> combo_filmes;
    private javax.swing.JComboBox<Object> combo_horarios;
    private javax.swing.JComboBox<Object> combo_ingressos;
    // End of variables declaration//GEN-END:variables

}
